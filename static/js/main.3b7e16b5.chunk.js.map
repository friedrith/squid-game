{"version":3,"sources":["store/game.slice.js","store/index.js","components/templates/Page.js","components/atoms/Footer.js","components/atoms/GithubRibbon.js","components/atoms/Logo.js","components/atoms/Button.js","utils/hooks/useOnMount.js","utils/hooks/useRequestWebcamPermission.js","utils/config/videoSize.js","components/views/Welcome.js","components/atoms/MotionIndicator.js","utils/hooks/useInterval.js","utils/types/difficulty.js","components/atoms/MotionDetector.js","components/views/ModeOfDifficulty.js","components/atoms/Message.js","components/atoms/Distance.js","utils/hooks/useEventListener.js","components/views/Game.js","components/organisms/RestartButtons.js","components/views/GameOver.js","components/views/Victory.js","App.js","index.js"],"names":["gameSlice","createSlice","name","initialState","difficulty","distance","isStarted","reducers","setDifficulty","state","payload","console","log","setDistance","start","actions","getDifficulty","game","getDistance","store","configureStore","reducer","Page","className","children","defaultProps","Footer","href","GithubRibbon","width","height","viewBox","style","fill","color","position","top","border","right","d","transformOrigin","Logo","xmlns","cx","cy","r","x","y","points","Button","to","type","callback","useEffect","constraints","audio","video","onAccepted","onRefused","useOnMount","navigator","mediaDevices","getUserMedia","then","catch","PermissionRequired","Welcome","useState","permissionAccepted","setPermissionAccepted","useRequestWebcamPermission","MotionIndicator","motionRatio","useInterval","delay","savedCallback","useRef","current","id","setInterval","clearInterval","DIFFICULTY","EASY","HARD","MotionDetector","onMove","onMotionDetected","pause","canvas","context","navigate","useNavigate","threshold","useSelector","Difficulty","drawWebcam","drawImage","drawReference","globalCompositeOperation","stream","startCapture","srcObject","getContext","imageScore","rgb","getImageData","data","i","length","ref","autoPlay","onPermissionChanged","ModeOfDifficulty","dispatch","useDispatch","setMotionRatio","changeDifficulty","isHard","onClick","htmlFor","checked","onChange","event","target","transform","Message","title","Distance","walking","left","marginLeft","src","trigger","colors","useEventListener","eventName","handler","element","window","savedHandler","addEventListener","eventListener","removeEventListener","Status","Game","changeDistance","newDistance","gameStatus","setGameStatus","setWalk","authorizedFails","fail","walkingDebounceTimeout","walk","clearTimeout","setTimeout","keyCode","label","hint","RestartButtons","GameOver","Victory","App","path","rootElement","document","getElementById","ReactDOM","render"],"mappings":"2LAEMA,EAAYC,YAAY,CAC5BC,KAAM,OACNC,aAAc,CACZC,WAAY,OACZC,SAAU,EACVC,WAAW,GAEbC,SAAU,CACRC,cAAe,SAACC,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACvBC,QAAQC,IAAI,gBAAiBF,GAC7BD,EAAML,WAAaM,GAErBG,YAAa,SAACJ,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACrBD,EAAMJ,SAAWK,GAEnBI,MAAO,SAACL,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACfD,EAAMH,UAAYI,MAKjB,EAA8CV,EAAUe,QAAhDP,EAAR,EAAQA,cAAeK,EAAvB,EAAuBA,YAEfb,GAFR,EAAoCc,MAE5Bd,EAAf,SAEagB,EAAgB,SAAAP,GAAK,OAAIA,EAAMQ,KAAKb,YAEpCc,EAAc,SAAAT,GAAK,OAAIA,EAAMQ,KAAKZ,UAElCC,EAAY,SAAAG,GAAK,OAAIA,EAAMQ,KAAKX,WCvB9Ba,EAJDC,YAAe,CAC3BC,QAAS,CAAEJ,U,6BCHPK,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,SAAd,OACX,qBAAKD,UAAS,sFAAiFA,GAA/F,SAA6GC,KAQ/GF,EAAKG,aAAe,CAClBF,UAAW,IAGED,QCPAI,EARA,kBACb,qBAAKH,UAAU,8DAAf,SACE,mBAAGI,KAAK,mCAAmCJ,UAAU,iCAArD,uDCuBWK,EAzBM,kBACnB,mBAAGD,KAAK,qDAAqDJ,UAAU,gBAAgB,aAAW,wBAAlG,SACE,sBACEM,MAAM,KACNC,OAAO,KACPC,QAAQ,cACRC,MAAO,CAAEC,KAAM,OAAQC,MAAO,UAAWC,SAAU,QAASC,IAAK,EAAGC,OAAQ,EAAGC,MAAO,GACtF,cAAY,OALd,UAOE,sBAAMC,EAAE,sDACR,sBACEA,EAAE,2LACFN,KAAK,eACLD,MAAO,CAAEQ,gBAAiB,eAC1BjB,UAAU,aAEZ,sBACEgB,EAAE,shBACFN,KAAK,eACLV,UAAU,oBCXHkB,EARF,kBACX,sBAAKlB,UAAU,YAAYQ,QAAQ,YAAYW,MAAM,6BAArD,UACE,wBAAQC,GAAG,KAAKC,GAAG,IAAIC,EAAE,IAAItB,UAAU,2CACvC,sBAAMuB,EAAE,KAAKC,EAAE,IAAIlB,MAAM,KAAKC,OAAO,KAAKP,UAAU,2CACpD,yBAASyB,OAAO,mBAAmBzB,UAAU,+CCD3C0B,EAAS,SAAC,GAAD,IAAGzB,EAAH,EAAGA,SAAU0B,EAAb,EAAaA,GAAI3B,EAAjB,EAAiBA,UAAjB,OACb,cAAC,IAAD,CACE2B,GAAIA,EACJ3B,UAAS,yGAAoGA,GAC7G4B,KAAK,SAHP,SAKG3B,KAULyB,EAAOxB,aAAe,CACpByB,GAAI,GACJ3B,UAAW,GACXC,SAAU,IAGGyB,QCvBA,WAAAG,GACbC,qBAAU,WACRD,MACC,KCFCE,EAAc,CAClBC,OAAO,EACPC,MAAO,CAAE3B,MCLU,IDKeC,OCJd,MDOP,cAAgC,IAA7B2B,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UAC5BC,GAAW,WACTC,UAAUC,aAAaC,aAAaR,GAAaS,KAAKN,GAAYO,MAAMN,OEAtEO,EAAqB,kBACzB,sBAAK1C,UAAU,6BAAf,0DAEE,uBAFF,mCAiDa2C,EA1CQ,WACrB,MAAoDC,oBAAS,GAA7D,mBAAOC,EAAP,KAA2BC,EAA3B,KAWA,OATAC,EAA2B,CACzBb,WAAY,WACVY,GAAsB,IAExBX,UAAW,WACTW,GAAsB,MAKxB,eAAC,EAAD,CAAM9C,UAAS,cAAf,UACE,sBAAKA,UAAU,yCAAf,UACE,cAAC,EAAD,IACA,oBAAIA,UAAU,sBAAd,wBACA,sBAAKA,UAAU,iCAAf,UACE,oBAAGA,UAAU,eAAb,4DAEE,uBAFF,sCAIA,mBAAGA,UAAU,UAAb,wDAEF,qBAAKA,UAAU,sGAAf,oMAIC6C,EACC,cAAC,EAAD,CAAQlB,GAAG,cAAc3B,UAAU,gBAAnC,mBAIA,cAAC,EAAD,OAGJ,cAAC,EAAD,IACA,cAAC,EAAD,QC3CSgD,EAVS,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACtB,qBAAKjD,UAAU,oHAAf,SACE,qBAAKA,UAAU,iCAAiCS,MAAO,CAAEH,MAAM,GAAD,OAAK,IAAM2C,EAAX,KAA2B1C,OAAO,GAAD,OAAK,IAAM0C,EAAX,WCsBpFC,EApBK,SAACrB,EAAUsB,GAC7B,IAAMC,EAAgBC,mBAGtBvB,qBAAU,WACRsB,EAAcE,QAAUzB,IACvB,CAACA,IAGJC,qBAAU,WAIR,GAAc,OAAVqB,EAAgB,CAClB,IAAII,EAAKC,aAJX,WACEJ,EAAcE,YAGaH,GAC3B,OAAO,kBAAMM,cAAcF,OAE5B,CAACJ,KClBSO,EALI,CACjBC,KAAM,OACNC,KAAM,QCeFC,EAAiB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,iBAAkBC,EAAY,EAAZA,MAC5C/B,EAAQoB,mBACRY,EAASZ,mBACTa,EAAUb,mBACVc,EAAWC,cAIXC,EAFaC,YAAY7E,KAEE8E,EAAWX,KAVX,IADL,IAatBY,EAAa,WACjBN,EAAQZ,QAAQmB,UAAUxC,EAAMqB,QAAS,EAAG,EAAGW,EAAOX,QAAQhD,MAAO2D,EAAOX,QAAQ/C,SAGhFmE,EAAgB,WACpBR,EAAQZ,QAAQqB,yBAA2B,cAC3CH,KAQFzB,EAA2B,CACzBb,WAAY,SAAA0C,GACVC,EAAaD,IAEfzC,UAAW,WACTgC,EAAS,QAIb,IAAMU,EAAe,SAAAD,GACnB3C,EAAMqB,QAAQwB,UAAYF,EAE1BV,EAAQZ,QAAUW,EAAOX,QAAQyB,WAAW,MAC5CL,KA0CF,OAvCA5C,qBAAU,WACJoC,EAAQZ,SAAWU,GACrBU,MAED,CAACV,EAAOE,EAAQZ,UAEnBJ,GAAY,WAAO,IAAD,EAChB,GAA2C,oBAAvC,OAAOgB,QAAP,IAAOA,GAAP,UAAOA,EAASZ,eAAhB,aAAO,EAAkBmB,WAA0B,CA3BvDP,EAAQZ,QAAQqB,yBAA2B,aAC3CH,IAmCE,IANA,IAEIQ,EAAa,EAEXC,EAJYf,EAAQZ,QAAQ4B,aAAa,EAAG,EAAGjB,EAAOX,QAAQhD,MAAO2D,EAAOX,QAAQ/C,QAIpE4E,KAEbC,EAAI,EAAGA,EAAIH,EAAII,OAAQD,GAAK,EAAG,CAC5BH,EAAIG,GAAK,EACTH,EAAIG,EAAI,GAAK,EACbH,EAAIG,EAAI,GAAK,GA/DD,IAmEpBJ,IAMJlB,EAFoBkB,EAAaX,GAI7BW,GAAcX,GAChBN,IAGFW,OAED,KAGD,qCACE,uBAAO1E,UAAU,SAASsF,IAAKrD,EAAOsD,UAAQ,IAC9C,wBAAQD,IAAKrB,EAAQ3D,MLnGN,IKmG+BC,OLlG9B,IKkGyDP,UAAU,eAYzF6D,EAAe3D,aAAe,CAC5B4D,OAAQ,aACR0B,oBAAqB,aACrBzB,iBAAkB,aAClBC,OAAO,GAGMH,QCnDA4B,EAxDU,WACvB,IAAMC,EAAWC,cACjB,EAAsC/C,mBAAS,GAA/C,mBAAOK,EAAP,KAAoB2C,EAApB,KAEMC,EAAmB,SAAAhH,GAAU,OAAI6G,EAASzG,EAAcJ,KAIxDiH,EAFaxB,YAAY7E,KAED8E,EAAWX,KAEzC,OACE,cAAC,EAAD,CAAM5D,UAAS,cAAf,SACE,sBAAKA,UAAU,6BAAf,UACE,cAAC,EAAD,CAAgB8D,OAAQ8B,IACxB,qBAAK5F,UAAU,qCAAf,gCACA,cAAC,EAAD,CAAiBiD,YAAaA,IAC9B,qBAAKjD,UAAU,kBAAf,mCACA,sBAAKA,UAAU,kCAAf,UACE,qBACEA,UAAS,8BAAyB8F,EAAS,gBAAkB,cAC7DC,QAAS,kBAAMF,EAAiBtB,EAAWZ,OAF7C,kBAMA,wBAAOqC,QAAQ,SAAShG,UAAU,6CAAlC,UACE,uBACEA,UAAU,oBACV4B,KAAK,WACL2B,GAAG,SACH0C,QAASH,EACTI,SAAU,SAAAC,GAAK,OAAIN,EAAiBM,EAAMC,OAAOH,QAAU1B,EAAWX,KAAOW,EAAWZ,SAE1F,qBAAK3D,UAAS,qEAAgE8F,EAAS,8BAAgC,IAAvH,SACE,qBACE9F,UAAS,8GACP8F,EAAS,eAAiB,IAE5BrF,MAAO,CAAE4F,UAAWP,EAAS,mBAAqB,WAIxD,qBACE9F,UAAS,8BAAyB8F,EAAS,aAAe,iBAC1DC,QAAS,kBAAMF,EAAiBtB,EAAWX,OAF7C,qBAOF,cAAC,EAAD,CAAQjC,GAAG,QAAQ3B,UAAU,gBAA7B,2BCzDFsG,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOtG,EAAV,EAAUA,SAAV,OACd,sBAAKD,UAAU,6BAAf,UACE,qBAAKA,UAAU,0BAAf,SAA0CuG,IAC1C,qBAAKvG,UAAU,UAAf,SAA0BC,QAS9BqG,EAAQpG,aAAe,CACrBqG,MAAO,GACPtG,SAAU,IAGGqG,QCEAE,EAnBE,SAAC,GAAD,IAAG1H,EAAH,EAAGA,SAAU2H,EAAb,EAAaA,QAAb,OACf,qCACE,qBAAKzG,UAAU,8BAA8BS,MAAO,CAAEiG,KAAK,GAAD,OAAK5H,EAAL,KAAkB6H,YAAa,IAAzF,SACE,2BACEC,IAAI,yCACJC,QAASJ,EAAU,OAAS,QAC5BK,OAAO,oCACPrG,MAAO,CAAEH,MAAO,IAAKC,OAAQ,SAGjC,qBAAKP,UAAU,4CAA4CS,MAAO,CAAEH,MAAM,GAAD,OAAK,IAAMxB,EAAX,YCmB9DiI,EA7BU,SAACC,EAAWC,GAA+B,IAAtBC,EAAqB,uDAAXC,OAEhDC,EAAe/D,mBAKrBvB,qBAAU,WACRsF,EAAa9D,QAAU2D,IACtB,CAACA,IACJnF,qBACE,WAIE,GADoBoF,GAAWA,EAAQG,iBACvC,CAEA,IAAMC,EAAgB,SAAAnB,GAAK,OAAIiB,EAAa9D,QAAQ6C,IAIpD,OAFAe,EAAQG,iBAAiBL,EAAWM,GAE7B,WACLJ,EAAQK,oBAAoBP,EAAWM,OAG3C,CAACN,EAAWE,KCZHM,EACE,cADFA,EAEA,YAsGEC,EAnGF,WACKnD,YAAYvF,GAA5B,IACMoF,EAAWC,cAEXtF,EAAWwF,YAAY3E,GAEvB+F,EAAWC,cACX+B,EAAiB,SAAAC,GAAW,OAAIjC,EAASpG,EAAYqI,KAE3DvF,GAAW,WAIQ,IAAbtD,GACF4I,EAAe,MAInB,MAAsC9E,mBAAS,GAA/C,mBAAOK,EAAP,KAAoB2C,EAApB,KAEA,EAAoChD,mBAAS4E,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEA,EAA2BjF,oBAAS,GAApC,mBAAO6D,EAAP,KAAgBqB,EAAhB,KAEMC,EAAkB1E,iBAAO,GAEzB2E,EAAO,WACX7D,EAAS,eASL8D,EAAyB5E,iBAAO,MAEhC6E,EAAO,WACX,GAAIN,IAAeJ,EAAoB,CACrC,IAAMG,EAAc7I,EAAW,EAG/B,GADA4I,EAAeC,GACK,MAAhBA,EAGF,OAFAG,GAAQ,QACR3D,EAAS,YAIX2D,GAAQ,GAERK,aAAaF,EAAuB3E,SACpC2E,EAAuB3E,QAAU8E,YAAW,WAC1ChJ,QAAQC,IAAI,YACZyI,GAAQ,KACP,UACMF,IAAeJ,IACxBO,EAAgBzE,SAAW,EAEK,IAA5ByE,EAAgBzE,SAClB0E,MAKNjB,EAAiB,SAAS,SAAAZ,GACF,KAAlBA,EAAMkC,SACRH,OAIJnB,EAAiB,SAAS,WACxBmB,OAGFhF,GAAY,WACN0E,IAAeJ,GACjBO,EAAgBzE,QAAU,EAC1BuE,EAAcL,IACLI,IAAeJ,GACxBK,EAAcL,KAEf,KAEH,IAAMc,EAAQV,IAAeJ,EAAqB,cAAgB,YAC5De,EAAOX,IAAeJ,EAAqB,uCAAyC,qBAE1F,OACE,eAAC,EAAD,CAAMxH,UAAW4H,IAAeJ,EAAf,4BAAjB,UACE,sBAAKxH,UAAU,6BAAf,UACE,cAAC,EAAD,CAAiBiD,YAAaA,IAC9B,cAAC,EAAD,CAASsD,MAAO+B,EAAhB,SAAwBC,OAE1B,cAAC,EAAD,CAAgBzE,OAAQ8B,EAAgB7B,iBA/DnB,WACnB6D,IAAeJ,GACjBQ,KA6D4EhE,MAAO4D,IAAeJ,IAClG,cAAC,EAAD,CAAU1I,SAAUA,EAAU2H,QAASA,QC/GvC+B,EAAiB,SAAC,GAAD,IAAGxI,EAAH,EAAGA,UAAH,OACrB,qCACE,cAAC,EAAD,CAAQ2B,GAAG,QAAQ3B,UAAS,UAAKA,EAAL,SAA5B,yBAGA,cAAC,EAAD,CAAQ2B,GAAG,IAAI3B,UAAWA,EAA1B,oCAUJwI,EAAetI,aAAe,CAC5BF,UAAW,IAGEwI,QCTAC,EATE,kBACf,cAAC,EAAD,CAAMzI,UAAU,WAAhB,SACE,sBAAKA,UAAU,cAAf,UACE,cAAC,EAAD,CAASuG,MAAM,YAAf,kCACA,cAAC,EAAD,CAAgBvG,UAAU,wBCKjB0I,EATC,kBACd,cAAC,EAAD,CAAM1I,UAAU,eAAhB,SACE,sBAAKA,UAAU,cAAf,UACE,cAAC,EAAD,CAASuG,MAAM,YACf,cAAC,EAAD,CAAgBvG,UAAU,0BCYjB2I,EAVH,kBACV,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAI1B,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAO0B,KAAK,cAAc1B,QAAS,cAAC,EAAD,MACnC,cAAC,IAAD,CAAO0B,KAAK,aAAa1B,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAO0B,KAAK,QAAQ1B,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAO0B,KAAK,WAAW1B,QAAS,cAAC,EAAD,UCR9B2B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,IAAD,CAAUrJ,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINiJ,K","file":"static/js/main.3b7e16b5.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst gameSlice = createSlice({\n  name: 'game',\n  initialState: {\n    difficulty: 'easy',\n    distance: 0,\n    isStarted: false\n  },\n  reducers: {\n    setDifficulty: (state, { payload }) => {\n      console.log('setDifficulty', payload)\n      state.difficulty = payload\n    },\n    setDistance: (state, { payload }) => {\n      state.distance = payload\n    },\n    start: (state, { payload }) => {\n      state.isStarted = payload\n    }\n  }\n})\n\nexport const { setDifficulty, setDistance, start } = gameSlice.actions\n\nexport default gameSlice.reducer\n\nexport const getDifficulty = state => state.game.difficulty\n\nexport const getDistance = state => state.game.distance\n\nexport const isStarted = state => state.game.isStarted\n","import { configureStore } from '@reduxjs/toolkit'\n\nimport game from './game.slice'\n\nconst store = configureStore({\n  reducer: { game }\n})\n\nexport default store\n\nexport * from './game.slice'\n","import PropTypes from 'prop-types'\n\nconst Page = ({ className, children }) => (\n  <div className={`relative h-screen w-screen p-2 select-none flex justify-center items-center ${className}`}>{children}</div>\n)\n\nPage.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired\n}\n\nPage.defaultProps = {\n  className: ''\n}\n\nexport default Page\n","const Footer = () => (\n  <div className=\"fixed inset-x-0 bottom-0 text-white p-1 text-sm text-center\">\n    <a href=\"https://interaction-dynamics.io/\" className=\"custor-pointer hover:underline\">\n      Made with love by Interaction Dynamics\n    </a>\n  </div>\n)\n\nexport default Footer\n","const GithubRibbon = () => (\n  <a href=\"https://github.com/interaction-dynamics/squid-game\" className=\"github-corner\" aria-label=\"View source on GitHub\">\n    <svg\n      width=\"80\"\n      height=\"80\"\n      viewBox=\"0 0 250 250\"\n      style={{ fill: '#fff', color: '#151513', position: 'fixed', top: 0, border: 0, right: 0 }}\n      aria-hidden=\"true\"\n    >\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n      <path\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n        fill=\"currentColor\"\n        style={{ transformOrigin: '130px 106px' }}\n        className=\"octo-arm\"\n      ></path>\n      <path\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n        fill=\"currentColor\"\n        className=\"octo-body\"\n      ></path>\n    </svg>\n  </a>\n)\n\nexport default GithubRibbon\n","const Logo = () => (\n  <svg className=\"h-16 mb-3\" viewBox=\"0 0 50 15\" xmlns=\"http://www.w3.org/2000/svg\">\n    <circle cx=\"10\" cy=\"7\" r=\"5\" className=\"stroke-white fill-transparent stroke-1\" />\n    <rect x=\"20\" y=\"2\" width=\"10\" height=\"10\" className=\"stroke-white fill-transparent stroke-1\" />\n    <polygon points=\"35,12 45,12 40,2\" className=\"stroke-white fill-transparent stroke-1\" />\n  </svg>\n)\n\nexport default Logo\n","import { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nconst Button = ({ children, to, className }) => (\n  <Link\n    to={to}\n    className={`h-10 flex items-center justify-center px-6 font-semibold rounded-md bg-white hover:bg-gray-200 ${className}`}\n    type=\"submit\"\n  >\n    {children}\n  </Link>\n)\n\nButton.propTypes = {\n  to: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]).isRequired\n}\n\nButton.defaultProps = {\n  to: '',\n  className: '',\n  children: []\n}\n\nexport default Button\n","import { useEffect } from 'react'\n\nexport default callback => {\n  useEffect(() => {\n    callback()\n  }, [])\n}\n","import * as VIDEO_SIZE from 'utils/config/videoSize'\nimport useOnMount from 'utils/hooks/useOnMount'\n\nconst constraints = {\n  audio: false,\n  video: { width: VIDEO_SIZE.WIDTH, height: VIDEO_SIZE.HEIGHT }\n}\n\nexport default ({ onAccepted, onRefused }) => {\n  useOnMount(() => {\n    navigator.mediaDevices.getUserMedia(constraints).then(onAccepted).catch(onRefused)\n  })\n}\n","export const WIDTH = 640\nexport const HEIGHT = 480\n","import { useState } from 'react'\n\nimport Page from 'components/templates/Page'\nimport Footer from 'components/atoms/Footer'\nimport GithubRibbon from 'components/atoms/GithubRibbon'\n\nimport Logo from 'components/atoms/Logo'\nimport Button from 'components/atoms/Button'\nimport useRequestWebcamPermission from 'utils/hooks/useRequestWebcamPermission'\n\nconst PermissionRequired = () => (\n  <div className=\"text-lg p-8 text-amber-200\">\n    This game requires the access to your webcam.\n    <br />\n    Please authorize the webcam.\n  </div>\n)\n\nexport const Welcome = () => {\n  const [permissionAccepted, setPermissionAccepted] = useState(false)\n\n  useRequestWebcamPermission({\n    onAccepted: () => {\n      setPermissionAccepted(true)\n    },\n    onRefused: () => {\n      setPermissionAccepted(false)\n    }\n  })\n\n  return (\n    <Page className={`bg-blue-500`}>\n      <div className=\"flex flex-col items-center text-center\">\n        <Logo />\n        <h1 className=\"text-5xl text-white\">Squid Game</h1>\n        <div className=\"text-xl text-gray-300 p-5 py-7\">\n          <p className=\"p-0 m-0 pb-5\">\n            Run by pressing [space] or clicking on the page\n            <br /> during the Green light and win.\n          </p>\n          <p className=\"p-0 m-0\">Hold still during the Red light or die.</p>\n        </div>\n        <div className=\"block md:hidden my-5 py-5 px-5 bg-white text-blue-500 text-lg font-medium max-w-screen-sm\t rounded\">\n          If you are using a smartphone, we suggest you to place your smartphone on a table or use only easy mode. The vibrations while\n          holding the smartphone will be considered as you moving.\n        </div>\n        {permissionAccepted ? (\n          <Button to=\"/difficulty\" className=\"text-blue-500\">\n            Start\n          </Button>\n        ) : (\n          <PermissionRequired />\n        )}\n      </div>\n      <GithubRibbon />\n      <Footer />\n    </Page>\n  )\n}\n\nexport default Welcome\n","import PropTypes from 'prop-types'\n\nconst MotionIndicator = ({ motionRatio }) => (\n  <div className=\"relative rounded-full border-2 border-white w-16 h-16 opacity-40 flex items-center justify-center overflow-hidden\">\n    <div className=\"bg-white absolute rounded-full\" style={{ width: `${100 * motionRatio}%`, height: `${100 * motionRatio}%` }}></div>\n  </div>\n)\n\nMotionIndicator.propTypes = {\n  motionRatio: PropTypes.number.isRequired\n}\n\nexport default MotionIndicator\n","import { useEffect, useRef } from 'react'\n\n/**\n * @see https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n */\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current()\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n  }, [delay])\n}\n\nexport default useInterval\n","const DIFFICULTY = {\n  EASY: 'easy',\n  HARD: 'hard'\n}\n\nexport default DIFFICULTY\n","import PropTypes from 'prop-types'\nimport { useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\n\nimport useInterval from 'utils/hooks/useInterval'\nimport useRequestWebcamPermission from 'utils/hooks/useRequestWebcamPermission'\n\nimport Difficulty from 'utils/types/difficulty'\n\nimport * as VIDEO_SIZE from 'utils/config/videoSize'\nimport { getDifficulty } from 'store'\n\nconst PIXEL_SCORE_THRESHOLD = 32\nconst IMAGE_SCORE_THRESHOLD = 8000\nconst IMAGE_SCORE_THRESHOLD_HARD = 1000\n\nconst MotionDetector = ({ onMove, onMotionDetected, pause }) => {\n  const video = useRef()\n  const canvas = useRef()\n  const context = useRef()\n  const navigate = useNavigate()\n\n  const difficulty = useSelector(getDifficulty)\n\n  const threshold = difficulty === Difficulty.HARD ? IMAGE_SCORE_THRESHOLD_HARD : IMAGE_SCORE_THRESHOLD\n\n  const drawWebcam = () => {\n    context.current.drawImage(video.current, 0, 0, canvas.current.width, canvas.current.height)\n  }\n\n  const drawReference = () => {\n    context.current.globalCompositeOperation = 'source-over'\n    drawWebcam()\n  }\n\n  const drawDifference = () => {\n    context.current.globalCompositeOperation = 'difference'\n    drawWebcam()\n  }\n\n  useRequestWebcamPermission({\n    onAccepted: stream => {\n      startCapture(stream)\n    },\n    onRefused: () => {\n      navigate('/')\n    }\n  })\n\n  const startCapture = stream => {\n    video.current.srcObject = stream\n\n    context.current = canvas.current.getContext('2d')\n    drawReference()\n  }\n\n  useEffect(() => {\n    if (context.current && pause) {\n      drawReference()\n    }\n  }, [pause, context.current])\n\n  useInterval(() => {\n    if (typeof context?.current?.drawImage === 'function') {\n      drawDifference()\n\n      const imageData = context.current.getImageData(0, 0, canvas.current.width, canvas.current.height)\n\n      let imageScore = 0\n\n      const rgb = imageData.data\n\n      for (let i = 0; i < rgb.length; i += 4) {\n        const r = rgb[i] / 3\n        const g = rgb[i + 1] / 3\n        const b = rgb[i + 2] / 3\n        const pixelScore = r + g + b\n\n        if (pixelScore >= PIXEL_SCORE_THRESHOLD) {\n          imageScore++\n        }\n      }\n\n      const motionRatio = imageScore / threshold\n\n      onMove(motionRatio)\n\n      if (imageScore >= threshold) {\n        onMotionDetected()\n      }\n\n      drawReference()\n    }\n  }, 100)\n\n  return (\n    <>\n      <video className=\"hidden\" ref={video} autoPlay />\n      <canvas ref={canvas} width={VIDEO_SIZE.WIDTH} height={VIDEO_SIZE.HEIGHT} className=\"hidden\" />\n    </>\n  )\n}\n\nMotionDetector.propTypes = {\n  onMove: PropTypes.func,\n  onPermissionChanged: PropTypes.func,\n  onMotionDetected: PropTypes.func,\n  pause: PropTypes.bool\n}\n\nMotionDetector.defaultProps = {\n  onMove: () => {},\n  onPermissionChanged: () => {},\n  onMotionDetected: () => {},\n  pause: false\n}\n\nexport default MotionDetector\n","import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Page from 'components/templates/Page'\nimport MotionIndicator from 'components/atoms/MotionIndicator'\nimport MotionDetector from 'components/atoms/MotionDetector'\nimport Button from 'components/atoms/Button'\n\nimport Difficulty from 'utils/types/difficulty'\nimport { setDifficulty, getDifficulty } from 'store'\n\nconst ModeOfDifficulty = () => {\n  const dispatch = useDispatch()\n  const [motionRatio, setMotionRatio] = useState(0)\n\n  const changeDifficulty = difficulty => dispatch(setDifficulty(difficulty))\n\n  const difficulty = useSelector(getDifficulty)\n\n  const isHard = difficulty === Difficulty.HARD\n\n  return (\n    <Page className={`bg-blue-500`}>\n      <div className=\"flex flex-col items-center\">\n        <MotionDetector onMove={setMotionRatio} />\n        <div className=\"text-2xl pb-5 uppercase text-white\">Mode of Difficulty</div>\n        <MotionIndicator motionRatio={motionRatio} />\n        <div className=\"text-white pt-3\">Indicator of movement</div>\n        <div className=\"flex flex-row items-center py-7\">\n          <div\n            className={`pr-2 cursor-pointer ${isHard ? 'text-gray-300' : 'text-white'}`}\n            onClick={() => changeDifficulty(Difficulty.EASY)}\n          >\n            Easy\n          </div>\n          <label htmlFor=\"toggle\" className=\"flex items-center cursor-pointer relative \">\n            <input\n              className=\"sr-only outline-0\"\n              type=\"checkbox\"\n              id=\"toggle\"\n              checked={isHard}\n              onChange={event => changeDifficulty(event.target.checked ? Difficulty.HARD : Difficulty.EASY)}\n            />\n            <div className={`bg-gray-200 border-2 border-gray-200 h-6 w-11 rounded-full ${isHard ? 'bg-blue-600 border-blue-600' : ''}`}>\n              <div\n                className={`absolute top-0.5 left-0.5 bg-white border border-gray-300 rounded-full h-5 w-5 transition shadow-sm ${\n                  isHard ? 'border-white' : ''\n                }`}\n                style={{ transform: isHard ? 'translateX(100%)' : '' }}\n              />\n            </div>\n          </label>\n          <div\n            className={`pl-2 cursor-pointer ${isHard ? 'text-white' : 'text-gray-300'}`}\n            onClick={() => changeDifficulty(Difficulty.HARD)}\n          >\n            Hard\n          </div>\n        </div>\n        <Button to=\"/game\" className=\"text-blue-500\">\n          Confirm\n        </Button>\n      </div>\n    </Page>\n  )\n}\n\nexport default ModeOfDifficulty\n","import PropTypes from 'prop-types'\n\nconst Message = ({ title, children }) => (\n  <div className=\"p-5 text-center text-white\">\n    <div className=\"text-2xl pb-5 uppercase\">{title}</div>\n    <div className=\"text-lg\">{children}</div>\n  </div>\n)\n\nMessage.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)])\n}\n\nMessage.defaultProps = {\n  title: '',\n  children: []\n}\n\nexport default Message\n","import PropTypes from 'prop-types'\n\nconst Distance = ({ distance, walking }) => (\n  <>\n    <div className=\"fixed bottom-0 right-0 z-50\" style={{ left: `${distance}%`, marginLeft: -40 }}>\n      <lord-icon\n        src=\"https://cdn.lordicon.com/ippkhukl.json\"\n        trigger={walking ? 'loop' : 'morph'}\n        colors=\"primary:#ffffff,secondary:#ffffff\"\n        style={{ width: 100, height: 100 }}\n      />\n    </div>\n    <div className=\"fixed bottom-0  right-0 h-3 bg-white z-50\" style={{ width: `${100 - distance}%` }}></div>\n  </>\n)\n\nDistance.propTypes = {\n  distance: PropTypes.number.isRequired,\n  walking: PropTypes.bool.isRequired\n}\n\nexport default Distance\n","import { useRef, useEffect } from 'react'\n\nconst useEventListener = (eventName, handler, element = window) => {\n  // Create a ref that stores handler\n  const savedHandler = useRef()\n  // Update ref.current value if handler changes.\n  // This allows our effect below to always get latest handler ...\n  // ... without us needing to pass it in effect deps array ...\n  // ... and potentially cause effect to re-run every render.\n  useEffect(() => {\n    savedHandler.current = handler\n  }, [handler])\n  useEffect(\n    () => {\n      // Make sure element supports addEventListener\n      // On\n      const isSupported = element && element.addEventListener\n      if (!isSupported) return\n      // Create event listener that calls handler function stored in ref\n      const eventListener = event => savedHandler.current(event)\n      // Add event listener\n      element.addEventListener(eventName, eventListener)\n      // Remove event listener on cleanup\n      return () => {\n        element.removeEventListener(eventName, eventListener)\n      }\n    },\n    [eventName, element] // Re-run if eventName or element changes\n  )\n}\n\nexport default useEventListener\n","import { useState, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\n\nimport { setDistance, getDistance, isStarted } from 'store'\nimport Page from 'components/templates/Page'\nimport Message from 'components/atoms/Message'\nimport Distance from 'components/atoms/Distance'\nimport MotionIndicator from 'components/atoms/MotionIndicator'\nimport MotionDetector from 'components/atoms/MotionDetector'\nimport useEventListener from 'utils/hooks/useEventListener'\nimport useInterval from 'utils/hooks/useInterval'\n\nimport useOnMount from 'utils/hooks/useOnMount'\n\nexport const Status = {\n  GREEN_LIGHT: 'GREEN_LIGHT',\n  RED_LIGHT: 'RED_LIGHT'\n}\n\nconst Game = () => {\n  const started = useSelector(isStarted)\n  const navigate = useNavigate()\n\n  const distance = useSelector(getDistance)\n\n  const dispatch = useDispatch()\n  const changeDistance = newDistance => dispatch(setDistance(newDistance))\n\n  useOnMount(() => {\n    if (!started) {\n      // navigate('/')\n    }\n    if (distance !== 0) {\n      changeDistance(0)\n    }\n  }, [started])\n\n  const [motionRatio, setMotionRatio] = useState(0)\n\n  const [gameStatus, setGameStatus] = useState(Status.GREEN_LIGHT)\n\n  const [walking, setWalk] = useState(false)\n\n  const authorizedFails = useRef(0)\n\n  const fail = () => {\n    navigate('/game-over')\n  }\n\n  const onMotionDetected = () => {\n    if (gameStatus === Status.RED_LIGHT) {\n      fail()\n    }\n  }\n\n  const walkingDebounceTimeout = useRef(null)\n\n  const walk = () => {\n    if (gameStatus === Status.GREEN_LIGHT) {\n      const newDistance = distance + 1\n\n      changeDistance(newDistance)\n      if (newDistance === 100) {\n        setWalk(false)\n        navigate('/victory')\n        return\n      }\n\n      setWalk(true)\n\n      clearTimeout(walkingDebounceTimeout.current)\n      walkingDebounceTimeout.current = setTimeout(() => {\n        console.log('stopWalk')\n        setWalk(false)\n      }, 100)\n    } else if (gameStatus === Status.RED_LIGHT) {\n      authorizedFails.current += 1\n\n      if (authorizedFails.current === 3) {\n        fail()\n      }\n    }\n  }\n\n  useEventListener('keyup', event => {\n    if (event.keyCode === 32) {\n      walk()\n    }\n  })\n\n  useEventListener('click', () => {\n    walk()\n  })\n\n  useInterval(() => {\n    if (gameStatus === Status.GREEN_LIGHT) {\n      authorizedFails.current = 0\n      setGameStatus(Status.RED_LIGHT)\n    } else if (gameStatus === Status.RED_LIGHT) {\n      setGameStatus(Status.GREEN_LIGHT)\n    }\n  }, 5000)\n\n  const label = gameStatus === Status.GREEN_LIGHT ? 'GREEN LIGHT' : 'RED LIGHT'\n  const hint = gameStatus === Status.GREEN_LIGHT ? 'Press [space] or click on the screen' : 'Hold still or DIE '\n\n  return (\n    <Page className={gameStatus === Status.GREEN_LIGHT ? `bg-green-500` : `bg-red-500`}>\n      <div className=\"flex flex-col items-center\">\n        <MotionIndicator motionRatio={motionRatio} />\n        <Message title={label}>{hint}</Message>\n      </div>\n      <MotionDetector onMove={setMotionRatio} onMotionDetected={onMotionDetected} pause={gameStatus === Status.GREEN_LIGHT} />\n      <Distance distance={distance} walking={walking} />\n    </Page>\n  )\n}\n\nexport default Game\n","import PropTypes from 'prop-types'\nimport Button from 'components/atoms/Button'\n\nconst RestartButtons = ({ className }) => (\n  <>\n    <Button to=\"/game\" className={`${className} mb-5`}>\n      Start Again\n    </Button>\n    <Button to=\"/\" className={className}>\n      Back to Start Menu\n    </Button>\n  </>\n)\n\nRestartButtons.propTypes = {\n  className: PropTypes.string\n}\n\nRestartButtons.defaultProps = {\n  className: ''\n}\n\nexport default RestartButtons\n","import Page from 'components/templates/Page'\nimport Message from 'components/atoms/Message'\nimport RestartButtons from 'components/organisms/RestartButtons'\n\nconst GameOver = () => (\n  <Page className=\"bg-black\">\n    <div className=\"text-center\">\n      <Message title=\"Game Over\">You moved, you lost!</Message>\n      <RestartButtons className=\" text-sky-900\" />\n    </div>\n  </Page>\n)\n\nexport default GameOver\n","import Page from 'components/templates/Page'\nimport Message from 'components/atoms/Message'\nimport RestartButtons from 'components/organisms/RestartButtons'\n\nconst Victory = () => (\n  <Page className=\"bg-green-500\">\n    <div className=\"text-center\">\n      <Message title=\"VICTORY\" />\n      <RestartButtons className=\" text-green-500\" />\n    </div>\n  </Page>\n)\n\nexport default Victory\n","import { Routes, Route } from 'react-router-dom'\n\nimport './styles.css'\n\nimport Welcome from 'components/views/Welcome'\nimport ModeOfDifficulty from 'components/views/ModeOfDifficulty'\nimport Game from 'components/views/Game'\nimport GameOver from 'components/views/GameOver'\nimport Victory from 'components/views/Victory'\n\nconst App = () => (\n  <Routes>\n    <Route path=\"/\" element={<Welcome />} />\n    <Route path=\"/difficulty\" element={<ModeOfDifficulty />} />\n    <Route path=\"/game-over\" element={<GameOver />} />\n    <Route path=\"/game\" element={<Game />} />\n    <Route path=\"/victory\" element={<Victory />} />\n  </Routes>\n)\n\nexport default App\n","import { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport store from './store'\nimport App from './App'\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </StrictMode>,\n  rootElement\n)\n"],"sourceRoot":""}