{"version":3,"sources":["components/Logo.js","components/Footer.js","components/GithubRibbon.js","components/Welcome.js","components/GameOver.js","components/Victory.js","components/Distance.js","components/MotionIndicator.js","components/GreenRedLight.js","utils/useInterval.js","utils/useEventListener.js","components/Game.js","utils/useLocalStorage.js","App.js","index.js"],"names":["className","viewBox","xmlns","cx","cy","r","x","y","width","height","points","class","href","style","fill","color","position","top","border","right","d","onStart","permissionAccepted","isHardByDefault","useState","isHard","setHard","GithubRibbon","Footer","Logo","onClick","htmlFor","type","id","checked","onChange","event","target","transform","distance","walking","left","marginLeft","src","trigger","colors","motion","motionMax","label","MotionIndicator","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useEventListener","eventName","handler","element","window","savedHandler","addEventListener","eventListener","removeEventListener","Status","backgrounds","WAIT_FOR_START","GREEN_LIGHT","RED_LIGHT","VICTORY","GAME_OVER","Game","video","canvas","gameStatus","setGameStatus","setDistance","setMotion","setPermissionAcceped","key","initialValue","item","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useLocalStorage","threshold","context","success","stream","srcObject","getContext","startCapture","drawImage","globalCompositeOperation","imageScore","rgb","getImageData","data","i","length","setWalk","walkingDebounceTimeout","walk","newDistance","clearTimeout","setTimeout","keyCode","constraints","audio","navigator","mediaDevices","getUserMedia","then","catch","backToBeginning","ref","autoPlay","Welcome","shouldBeHard","GreenRedLight","GameOver","Victory","Distance","rootElement","document","getElementById","ReactDOM","render","App"],"mappings":"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","file":"static/js/main.b95cea66.chunk.js","sourcesContent":["import React from 'react'\n\nexport default () => (\n  <svg className=\"h-16 mb-3\" viewBox=\"0 0 50 15\" xmlns=\"http://www.w3.org/2000/svg\">\n    <circle cx=\"10\" cy=\"7\" r=\"5\" className=\"stroke-white fill-transparent stroke-1\" />\n    <rect x=\"20\" y=\"2\" width=\"10\" height=\"10\" className=\"stroke-white fill-transparent stroke-1\" />\n    <polygon points=\"35,12 45,12 40,2\" className=\"stroke-white fill-transparent stroke-1\" />\n  </svg>\n)\n","import React from 'react'\n\nexport default () => <div class=\"fixed inset-x-0 bottom-0 text-white p-1 text-sm\">Made with Love From Montreal</div>\n","import React from 'react'\n\nexport default () => (\n  <a href=\"https://your-url\" className=\"github-corner\" aria-label=\"View source on GitHub\">\n    <svg\n      width=\"80\"\n      height=\"80\"\n      viewBox=\"0 0 250 250\"\n      style={{ fill: '#fff', color: '#151513', position: 'fixed', top: 0, border: 0, right: 0 }}\n      aria-hidden=\"true\">\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n      <path\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n        fill=\"currentColor\"\n        style={{ 'ransform-origin': '130px 106px' }}\n        class=\"octo-arm\"></path>\n      <path\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n        fill=\"currentColor\"\n        class=\"octo-body\"></path>\n    </svg>\n  </a>\n)\n","import React, { useState } from 'react'\n\nimport Logo from './Logo'\nimport Footer from './Footer'\nimport GithubRibbon from './GithubRibbon'\n\nexport default ({ onStart, permissionAccepted, isHardByDefault }) => {\n  const [isHard, setHard] = useState(isHardByDefault)\n\n  return (\n    <div className=\"flex flex-col items-center text-center\">\n      <GithubRibbon />\n      <Footer />\n      <Logo />\n      <h1 className=\"text-5xl\">Squid Game</h1>\n      <div className=\"text-2xl p-5\">\n        Run by pressing [space] or clicking on the page\n        <br /> during the Green light and win.\n      </div>\n      <div className=\"text-2xl pb-5\">Hold still during the Red light or die.</div>\n      <div className=\"block md:hidden my-5 py-5 px-5 bg-white text-blue-500 text-lg font-medium max-w-screen-sm\t rounded\">\n        If you are using a smartphone, we suggest you to place your smartphone on a table or use only easy mode. The vibrations while\n        holding the smartphone will be considered as you moving.\n      </div>\n      {permissionAccepted ? (\n        <div className=\"flex flex-col items-center\">\n          <div className=\"flex flex-row items-center py-5\">\n            <div className={`pr-2 cursor-pointer ${isHard ? 'text-gray-300' : 'text-white'}`} onClick={() => setHard(false)}>\n              Easy\n            </div>\n            <label htmlFor=\"toggle\" className=\"flex items-center cursor-pointer relative \">\n              <input\n                className=\"sr-only outline-0\"\n                type=\"checkbox\"\n                id=\"toggle\"\n                checked={isHard}\n                onChange={event => setHard(event.target.checked)}\n              />\n              <div className={`bg-gray-200 border-2 border-gray-200 h-6 w-11 rounded-full ${isHard ? 'bg-blue-600 border-blue-600' : ''}`}>\n                <div\n                  className={`absolute top-0.5 left-0.5 bg-white border border-gray-300 rounded-full h-5 w-5 transition shadow-sm ${\n                    isHard ? 'border-white' : ''\n                  }`}\n                  style={{ transform: isHard ? 'translateX(100%)' : '' }}\n                />\n              </div>\n            </label>\n            <div className={`pl-2 cursor-pointer ${isHard ? 'text-white' : 'text-gray-300'}`} onClick={() => setHard(true)}>\n              Hard\n            </div>\n          </div>\n          <button\n            onClick={() => onStart(isHard)}\n            className=\"h-10 px-6 font-semibold rounded-md bg-white hover:bg-gray-200 text-blue-500\"\n            type=\"submit\">\n            Start\n          </button>\n        </div>\n      ) : (\n        <div className=\"text-lg p-8 text-amber-200\">\n          This game requires the access to your webcam.\n          <br />\n          Please authorize the webcam.\n        </div>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default ({ onStart }) => (\n  <div className=\"text-center\">\n    <div className=\"text-2xl p-5\">GAME OVER</div>\n    <div className=\"text-2xl pb-5\">You moved, you lost!</div>\n    <div>\n      <button onClick={onStart} className=\"h-10 px-6 font-semibold rounded-md bg-white hover:bg-gray-200 text-black\" type=\"submit\">\n        Back to Start Menu\n      </button>\n    </div>\n  </div>\n)\n","import React from 'react'\n\nexport default ({ onStart }) => (\n  <div className=\"text-center\">\n    <div className=\"text-2xl p-5\">VICTORY!</div>\n    <button onClick={onStart} className=\"h-10 px-6 font-semibold rounded-md bg-white hover:bg-gray-200 text-sky-900\" type=\"submit\">\n      Back to Start Menu\n    </button>\n  </div>\n)\n","import React, { useEffect, useState } from 'react'\n\nexport default ({ distance, walking }) => {\n  return (\n    <>\n      <div className=\"fixed bottom-0 right-0 z-50\" style={{ left: `${distance}%`, marginLeft: -40 }}>\n        <lord-icon\n          src=\"https://cdn.lordicon.com/ippkhukl.json\"\n          trigger={walking ? 'loop' : 'morph'}\n          colors=\"primary:#ffffff,secondary:#ffffff\"\n          style={{ width: 100, height: 100 }}\n        />\n      </div>\n\n      <div className=\"fixed bottom-0  right-0 h-3 bg-white z-50\" style={{ width: `${100 - distance}%` }}></div>\n    </>\n  )\n}\n","import React from 'react'\n\nexport default ({ motion, motionMax }) => (\n  <div className=\"relative rounded-full border-2 border-white w-16 h-16 opacity-40 flex items-center justify-center overflow-hidden\">\n    <div\n      className=\"bg-white absolute rounded-full\"\n      style={{ width: `${(100 * motion) / motionMax}%`, height: `${(100 * motion) / motionMax}%` }}></div>\n  </div>\n)\n","import React from 'react'\nimport MotionIndicator from './MotionIndicator'\n\nexport default ({ motion, motionMax, label }) => (\n  <div className=\"flex flex-col items-center\">\n    <MotionIndicator motion={motion} motionMax={motionMax} />\n    <div className=\"text-2xl p-5\">{label}</div>\n  </div>\n)\n","import { useEffect, useRef } from 'react'\n\n/**\n * @see https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n */\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current()\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n  }, [delay])\n}\n\nexport default useInterval\n","import { useRef, useEffect } from 'react'\n\nconst useEventListener = (eventName, handler, element = window) => {\n  // Create a ref that stores handler\n  const savedHandler = useRef()\n  // Update ref.current value if handler changes.\n  // This allows our effect below to always get latest handler ...\n  // ... without us needing to pass it in effect deps array ...\n  // ... and potentially cause effect to re-run every render.\n  useEffect(() => {\n    savedHandler.current = handler\n  }, [handler])\n  useEffect(\n    () => {\n      // Make sure element supports addEventListener\n      // On\n      const isSupported = element && element.addEventListener\n      if (!isSupported) return\n      // Create event listener that calls handler function stored in ref\n      const eventListener = event => savedHandler.current(event)\n      // Add event listener\n      element.addEventListener(eventName, eventListener)\n      // Remove event listener on cleanup\n      return () => {\n        element.removeEventListener(eventName, eventListener)\n      }\n    },\n    [eventName, element] // Re-run if eventName or element changes\n  )\n}\n\nexport default useEventListener\n","import React, { useEffect, useRef, useState } from 'react'\n\nimport Welcome from './Welcome'\nimport GameOver from './GameOver'\nimport Victory from './Victory'\nimport Distance from './Distance'\nimport GreenRedLight from './GreenRedLight'\nimport useInterval from '../utils/useInterval'\nimport useEventListener from '../utils/useEventListener'\nimport useLocalStorage from '../utils/useLocalStorage'\n\nconst width = 640\nconst height = 480\n\nconst PIXEL_SCORE_THRESHOLD = 32\nconst IMAGE_SCORE_THRESHOLD = 4000\nconst IMAGE_SCORE_THRESHOLD_HARD = 1000\n\nconst Status = {\n  WAIT_FOR_START: 'WAIT_FOR_START',\n  GREEN_LIGHT: 'GREEN_LIGHT',\n  RED_LIGHT: 'RED_LIGHT',\n  VICTORY: 'VICTORY',\n  GAME_OVER: 'GAME_OVER'\n}\n\nconst backgrounds = {\n  WAIT_FOR_START: 'bg-blue-500',\n  GREEN_LIGHT: 'bg-green-500',\n  RED_LIGHT: 'bg-red-500',\n  VICTORY: 'bg-sky-900',\n  GAME_OVER: 'bg-black'\n}\n\nconst Game = () => {\n  const video = useRef()\n  const canvas = useRef()\n\n  const [gameStatus, setGameStatus] = useState(Status.WAIT_FOR_START)\n\n  const [distance, setDistance] = useState(0)\n  const [motion, setMotion] = useState('')\n  const [permissionAccepted, setPermissionAcceped] = useState(false)\n\n  const [isHard, setHard] = useLocalStorage('difficulty', false)\n\n  const threshold = isHard ? IMAGE_SCORE_THRESHOLD_HARD : IMAGE_SCORE_THRESHOLD\n\n  const context = useRef()\n\n  const success = stream => {\n    video.current.srcObject = stream\n\n    context.current = canvas.current.getContext('2d')\n\n    startCapture()\n    setPermissionAcceped(true)\n  }\n\n  const error = error => {\n    console.log(error)\n    setPermissionAcceped(false)\n  }\n\n  useInterval(() => {\n    if (typeof context?.current?.drawImage === 'function') {\n      context.current.globalCompositeOperation = 'difference'\n\n      context.current.drawImage(video.current, 0, 0, canvas.current.width, canvas.current.height)\n\n      const imageData = context.current.getImageData(0, 0, canvas.current.width, canvas.current.height)\n\n      let imageScore = 0\n\n      const rgb = imageData.data\n\n      for (let i = 0; i < rgb.length; i += 4) {\n        const r = rgb[i] / 3\n        const g = rgb[i + 1] / 3\n        const b = rgb[i + 2] / 3\n        const pixelScore = r + g + b\n\n        if (pixelScore >= PIXEL_SCORE_THRESHOLD) {\n          imageScore++\n        }\n      }\n\n      setMotion(imageScore)\n\n      if (imageScore >= threshold && gameStatus === Status.RED_LIGHT) {\n        setGameStatus(Status.GAME_OVER)\n      }\n\n      context.current.globalCompositeOperation = 'source-over'\n      context.current.drawImage(video.current, 0, 0, canvas.current.width, canvas.current.height)\n    }\n  }, 100)\n\n  const [walking, setWalk] = useState(false)\n\n  const walkingDebounceTimeout = useRef(null)\n\n  const walk = () => {\n    if (gameStatus === Status.GREEN_LIGHT) {\n      const newDistance = distance + 1\n\n      setDistance(newDistance)\n      if (newDistance === 100) {\n        setGameStatus(Status.VICTORY)\n        setWalk(false)\n        return\n      }\n\n      setWalk(true)\n\n      clearTimeout(walkingDebounceTimeout.current)\n      walkingDebounceTimeout.current = setTimeout(() => {\n        console.log('stopWalk')\n        setWalk(false)\n      }, 100)\n    }\n  }\n\n  useEventListener('keyup', event => {\n    if (event.keyCode === 32) {\n      walk()\n    }\n  })\n\n  useEventListener('click', event => {\n    walk()\n  })\n\n  const startCapture = () => {\n    context.current.globalCompositeOperation = 'source-over'\n\n    context.current.drawImage(video.current, 0, 0, canvas.current.width, canvas.current.height)\n  }\n\n  useInterval(\n    () => {\n      if (gameStatus === Status.GREEN_LIGHT) {\n        context.current.globalCompositeOperation = 'source-over'\n        context.current.drawImage(video.current, 0, 0, canvas.current.width, canvas.current.height)\n        setGameStatus(Status.RED_LIGHT)\n      } else if (gameStatus === Status.RED_LIGHT) {\n        setGameStatus(Status.GREEN_LIGHT)\n      }\n    },\n    gameStatus === Status.GREEN_LIGHT || gameStatus === Status.RED_LIGHT ? 5000 : null\n  )\n\n  const startGame = shouldBeHard => {\n    setDistance(0)\n    console.log('setHard')\n    setHard(shouldBeHard)\n    setGameStatus(Status.GREEN_LIGHT)\n  }\n\n  useEffect(() => {\n    var constraints = {\n      audio: false,\n      video: { width, height }\n    }\n    navigator.mediaDevices.getUserMedia(constraints).then(success).catch(error)\n  }, [])\n\n  const backToBeginning = () => {\n    setGameStatus(Status.WAIT_FOR_START)\n  }\n\n  return (\n    <>\n      <video className=\"hidden\" ref={video} autoPlay />\n      <canvas ref={canvas} width={width} height={height} className=\"hidden\" />\n      <div className={`relative h-screen w-screen ${backgrounds[gameStatus]} p-2 select-none`}>\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          {/* <MotionIndicator motion={motion} motionMax={IMAGE_SCORE_THRESHOLD} /> */}\n        </div>\n        <div className={`relative w-full h-full text-white flex items-center justify-center`}>\n          {gameStatus === Status.WAIT_FOR_START ? (\n            <Welcome onStart={startGame} permissionAccepted={permissionAccepted} isHardByDefault={isHard} />\n          ) : null}\n          {gameStatus === Status.GREEN_LIGHT ? <GreenRedLight motion={motion} motionMax={threshold} label=\"GREEN LIGHT\" /> : null}\n          {gameStatus === Status.RED_LIGHT ? <GreenRedLight motion={motion} motionMax={threshold} label=\"RED LIGHT\" /> : null}\n          {gameStatus === Status.GAME_OVER ? <GameOver onStart={backToBeginning} /> : null}\n          {gameStatus === Status.VICTORY ? <Victory onStart={backToBeginning} /> : null}\n        </div>\n      </div>\n      {gameStatus !== Status.WAIT_FOR_START ? <Distance distance={distance} walking={walking} /> : null}\n\n      {/* <div className=\"fixed top-0 left-0 text-white p-2\">{distance}</div> */}\n    </>\n  )\n}\n\nexport default Game\n","import { useState } from 'react'\n\nexport default (key, initialValue) => {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key)\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error)\n      return initialValue\n    }\n  })\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value\n      // Save state\n      setStoredValue(valueToStore)\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore))\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n  return [storedValue, setValue]\n}\n","import './styles.css'\nimport Game from './components/Game'\n\nexport default () => <Game />\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}